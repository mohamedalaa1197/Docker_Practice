services:
  node-app: 
  # Container name can't be used when doing `docker-compose up --scale node-app=3`  as each container should have a unique name.
    # container_name: express-node-app-container
    image: mohamedalaa1197/tresmerge-docker
    # we already use Nginx as a reverse proxy, so we don't need to expose the port.
    # also ports cant be used with `docker-compose up --scale node-app=3` as it will cause a conflict.
    
    # ports:
    #   - "4000:4000"
    #
    env_file:
      - ./.env
    depends_on:
      - postgres
      - redis
    deploy:
      replicas: 4
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s 
     
  # mongo:
  #   image: mongo
  #   restart: always
  #   volumes:
  #     - mongo-db:/data/db
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: example
  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: example
  #     ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
  #     ME_CONFIG_BASICAUTH: false
  #   depends_on:
  #     - mongo
  redis:
    image: redis
  nginx:
    image: nginx:stable-alpine
    ports:
    - "8080:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - node-app
  postgres:
    image: postgres
    restart: always
    volumes:
      - postgres-db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: example


volumes:
  mongo-db:
  postgres-db:

